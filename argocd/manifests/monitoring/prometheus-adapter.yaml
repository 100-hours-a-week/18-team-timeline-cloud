apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-adapter
  namespace: tamnara-prod

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-adapter
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - services
  - configmaps
  verbs:
  - get
  - list
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-adapter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-adapter
subjects:
- kind: ServiceAccount
  name: prometheus-adapter
  namespace: tamnara-prod

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-adapter-config
  namespace: tamnara-prod
data:
  config.yaml: |
    rules:
    # HTTP 요청 속도 기반 메트릭
    - seriesQuery: 'otel_http_server_requests_seconds_count{service_name="backend"}'
      resources:
        overrides:
          service_name:
            resource: service
      name:
        matches: "otel_http_server_requests_seconds_count"
        as: "http_requests_per_second"
      metricsQuery: sum(rate(otel_http_server_requests_seconds_count{service_name="backend"}[1m])) by (service_name)
    
    # JVM 메모리 사용률 기반 메트릭
    - seriesQuery: 'otel_jvm_memory_used_bytes{service_name="backend",area="heap"}'
      resources:
        overrides:
          service_name:
            resource: service
      name:
        matches: "otel_jvm_memory_used_bytes"
        as: "jvm_memory_usage_percent"
      metricsQuery: (otel_jvm_memory_used_bytes{service_name="backend",area="heap"} / otel_jvm_memory_max_bytes{service_name="backend",area="heap"}) * 100

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-adapter
  namespace: tamnara-prod
spec:
  replicas: 1
  selector:
    matchLabels:
      name: prometheus-adapter
  template:
    metadata:
      labels:
        name: prometheus-adapter
    spec:
      serviceAccountName: prometheus-adapter
      containers:
      - name: prometheus-adapter
        image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.10.0
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
        args:
        - --config=/etc/adapter/config.yaml
        - --metrics-relist-interval=30s
        - --v=4
        - --secure-port=6443
        - --prometheus-url=http://adot-collector:8889
        ports:
        - containerPort: 6443
        volumeMounts:
        - name: config
          mountPath: /etc/adapter
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
      volumes:
      - name: config
        configMap:
          name: prometheus-adapter-config

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-adapter
  namespace: tamnara-prod
spec:
  ports:
  - port: 443
    targetPort: 6443
  selector:
    name: prometheus-adapter

---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.custom.metrics.k8s.io
spec:
  service:
    name: prometheus-adapter
    namespace: tamnara-prod
  group: custom.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100 
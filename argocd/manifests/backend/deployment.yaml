apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
  annotations:
    argocd-image-updater.argoproj.io/image-list: backend=346011888304.dkr.ecr.ap-northeast-2.amazonaws.com/tamnara/be:latest
    argocd-image-updater.argoproj.io/write-back-method: git
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      serviceAccountName: backend-service-account
      nodeSelector:
        eks.amazonaws.com/nodegroup: backend-node-group 
      containers:
      - name: backend
        image: 346011888304.dkr.ecr.ap-northeast-2.amazonaws.com/tamnara/be:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8080"
        - name: REDIS_HOST
          value: "redis"
        - name: REDIS_PORT
          value: "6379"
        envFrom:
        - secretRef:
            name: backend-secrets
        - secretRef:
            name: backend-environments ## 나중에 제거
        resources:
          requests:
            memory: "1Gi"
            cpu: "768m"
          limits:
            memory: "1.5Gi"
            cpu: "1500m"
        # 헬스체크 설정
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 180
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 5 
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 57.2.0
    helm:
      releaseName: prometheus
      values: |
        # kube-prometheus-stack Values
        
        # Global Settings
        global:
          rbac:
            create: true
            pspEnabled: false  # K8s 1.25+ compatibility
        
        # Prometheus Server Configuration
        prometheus:
          prometheusSpec:
            # Resource Settings
            resources:
              limits:
                cpu: 500m
                memory: 2Gi
              requests:
                cpu: 100m
                memory: 512Mi
            
            # Storage Configuration
            retention: 15d
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: gp2
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 10Gi
            
            # Service Monitor Selector
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            ruleSelectorNilUsesHelmValues: false
            
            # Additional Scrape Configs for ADOT Collector
            additionalScrapeConfigs:
              - job_name: 'adot-collector'
                static_configs:
                  - targets: ['adot-collector:8889']
                scrape_interval: 15s
                metrics_path: '/metrics'
                honor_labels: true
                
              - job_name: 'backend-pods'
                kubernetes_sd_configs:
                  - role: pod
                    namespaces:
                      names:
                        - tamnara-prod
                relabel_configs:
                  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                    action: keep
                    regex: true
                  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                    action: replace
                    target_label: __metrics_path__
                    regex: (.+)
                  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                    action: replace
                    regex: ([^:]+)(?::\d+)?;(\d+)
                    replacement: $1:$2
                    target_label: __address__
                  - action: labelmap
                    regex: __meta_kubernetes_pod_label_(.+)
                  - source_labels: [__meta_kubernetes_namespace]
                    action: replace
                    target_label: kubernetes_namespace
                  - source_labels: [__meta_kubernetes_pod_name]
                    action: replace
                    target_label: kubernetes_pod_name
        
        # Grafana Configuration
        grafana:
          enabled: true
          adminPassword: "admin"
          ingress:
            enabled: false
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          persistence:
            enabled: true
            storageClassName: gp2
            size: 5Gi
        
        # Alertmanager Configuration
        alertmanager:
          enabled: true
          alertmanagerSpec:
            resources:
              limits:
                cpu: 200m
                memory: 256Mi
              requests:
                cpu: 100m
                memory: 128Mi
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: gp2
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 2Gi
        
        # Node Exporter Configuration
        nodeExporter:
          enabled: true
          resources:
            limits:
              cpu: 200m
              memory: 180Mi
            requests:
              cpu: 100m
              memory: 30Mi
        
        # Kube State Metrics Configuration
        kubeStateMetrics:
          enabled: true
          resources:
            limits:
              cpu: 100m
              memory: 64Mi
            requests:
              cpu: 10m
              memory: 32Mi
        
        # Prometheus Operator Configuration
        prometheusOperator:
          enabled: true
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
        
        # Disable components we don't need
        coreDns:
          enabled: false
        kubeEtcd:
          enabled: false
        kubeControllerManager:
          enabled: false
        kubeScheduler:
          enabled: false
        kubeProxy:
          enabled: false
        
        # Default rules
        defaultRules:
          create: true
          rules:
            alertmanager: true
            etcd: false
            configReloaders: true
            general: true
            k8s: true
            kubeApiserver: true
            kubeApiserverAvailability: true
            kubeApiserverSlos: true
            kubelet: true
            kubeProxy: false
            kubePrometheusGeneral: true
            kubePrometheusNodeRecording: true
            kubernetesApps: true
            kubernetesResources: true
            kubernetesStorage: true
            kubernetesSystem: true
            kubeScheduler: false
            kubeStateMetrics: true
            network: true
            node: true
            nodeExporterAlerting: true
            nodeExporterRecording: true
            prometheus: true
            prometheusOperator: true
  destination:
    server: https://kubernetes.default.svc
    namespace: tamnara-prod
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true 